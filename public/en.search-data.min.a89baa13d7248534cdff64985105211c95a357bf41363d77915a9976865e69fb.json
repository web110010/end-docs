[{"id":0,"href":"/docs/desktop-environments-and-window-managers/","title":"Desktop Environments and Window Managers","section":"Docs","content":"test flat page\n"},{"id":1,"href":"/docs/hardware/gpu/nvidia/envy-control/","title":"Envy Control","section":"Nvidia","content":" Envy Control # EnvyControl is a CLI tool that provides an easy way to switch between GPU modes on Nvidia Optimus systems (i.e laptops with hybrid Intel + Nvidia or AMD + Nvidia graphics configurations) under Linux.\nhttps://github.com/bayasdev/envycontrol\nFeatures # Written in Python 3+ for portability and compatibility\nSupports GDM, SDDM and LightDM display managers\nSave battery with integrated graphics mode\nPCI-Express Runtime D3 (RTD3) Power Management support for Turing and later\nCoolbits support for GPU overclocking\nFix screen tearing with ForceCompositionPipeline\nworks for both dracut and mkinitcpio\nThe tool offers 3 Graphics modes:\nIntegrated: The integrated Intel or AMD iGPU is used exclusively\nHybrid: Enables PRIME render offloading\nNvidia: The Nvidia dGPU is used exclusively\ndetailed info here: README.md#-graphics-modes\nYou will find an AUR PKGBUILD and can install it over yay:\nyay -S envycontrol to run it use this commandline and check the usage box for options (graphics modes):\nsudo envycontrol -s \u0026lt;MODE\u0026gt; Usage: # usage: envycontrol.py [-h] [-v] [-q] [-s MODE] [--dm DISPLAY_MANAGER] [--force-comp] [--coolbits [VALUE]] [--rtd3 [VALUE]] [--reset-sddm] [--reset] [--verbose] options: -h, --help show this help message and exit -v, --version Output the current version -q, --query Query the current graphics mode -s MODE, --switch MODE Switch the graphics mode. Available choices: integrated, hybrid, nvidia --dm DISPLAY_MANAGER Manually specify your Display Manager for Nvidia mode. Available choices: gdm, gdm3, sddm, lightdm --force-comp Enable ForceCompositionPipeline on Nvidia mode --coolbits [VALUE] Enable Coolbits on Nvidia mode. Default if specified: 28 --rtd3 [VALUE] Setup PCI-Express Runtime D3 (RTD3) Power Management on Hybrid mode. Available choices: 0, 1, 2, 3. Default if specified: 2 --reset-sddm Restore default Xsetup file --reset Revert changes made by EnvyControl --verbose Enable verbose mode for detailed help and info on how to use this awesome tool read the detailed wiki at the source:\nhttps://github.com/bayasdev/envycontrol/blob/main/README.md\nEnvyControl Frequently-Asked-Questions have also a lot of good information.\nThank’s @VictorBayas at the telegram chat to hint me on his helpful tool perfectly fitting for EndeavourOS indeed!\n"},{"id":2,"href":"/docs/hardware/gpu/nvidia/nouveau/","title":"Nouveau","section":"Nvidia","content":"by Bryanpwo\nNouveau # If your Nvidia card isn’t supported anymore by the proprietary nvidia driver, you can use the open-source driver provided by Linux.\nMost of the time, you can use the nouveau driver provided by the package xf86-video-nouveau, but on older GPU’s it is most likely this package will cause tearing and bad performance, so it is better to use the modesetting driver shipped by default in the Linux kernel. To enable it you just have to uninstall the unneeded package and change the following configuration.\nsudo pacman -R xf86-video-nouveau\nsudo nano /etc/mkinitcpio.conf\nThen go to the line\nMODULES=()\nAnd change it into:\nMODULES=(nouveau)\nSave it with [CTRL+X]\nThen type:\nsudo mkinitcpio -p linux\nIf you also have linux-lts installed then repeat the last process with linux-lts on the end of the line.\nReboot and your system is running with nouveau.\nIn some cases, the video quality has a delay or glitches, especially with DRM encoded videos on services as Netflix for example.\nIn that case try to install the nouveau-fw package (AUR) – after install reboot the system.\n"},{"id":3,"href":"/docs/hardware/gpu/nvidia/","title":"Nvidia","section":"GPU","content":" Nvidia # As most newer cards will work with the latest (called nvidia) driver, older cards are no longer supported by the latest driver. Nvidia is sorting out older GPU to legacy branch this cards are not supported by the latest driver.\nThe first thing you should do is get knowledge about your card and supported driver:\nGeForce 930~, 10-20, and Quadro/Tesla/Tegra K-series cards and newer (cards from around 2010 and later) # These are supported by the main (495xx) nvidia packages/Driver nvidia nvidia-dkms\nIf these packages do not work, nvidia-betaAUR may have a newer driver version that offers support.\nSee here: about-legacy-gpu\nEndeavouOS provides some check script to help you to find supported drivers:\nnvidia-driver-supported-branches Included inside nvidia-installer-db package, simply run it from a terminal and you will get some useful information looking like so:\n» nvidia-driver-supported-branches ↵ NVIDIA card id: 128b Series 470: supported\nOverview over the legacy branches: # (unsupported means no package for driver at the repositories)\n470xx (AUR): (new legacy branch oct. 2021) # install the nvidia-470xx-dkmsAUR package. (or https://repo.m2x.dev/ Repository)\nAffected cards: GeForce 630-920 series cards [GKxxx] from around 2013-2014 (Kepler)\n390xx # unsupported but works with xorg 1.20 (current version)\nAffected cards: GeForce 400/500/600 series cards [NVCx and NVDx]\nThe driver can be found in the AUR or use the default Nouveau driver shipped with the Linux kernel\nThere are prebuild packages available at the m2x.dev repository.\n340xx # unsupported but works with xorg 1.20 (current version)\nAffected Cards: GeForce 8/9, ION and 100-300 series cards [NV5x, NV8x, NV9x and NVAx]\nThe driver can be found in the AUR or us the default Nouveau driver shipped with the kernel\n304xx # unsupported use Nouveau (no AUR build maintained anymore too)\n**Affected Cards:**For GeForce 6/7 series cards [NV4x and NV6x]\n173xx # unsupported use Nouveau (no AUR build)\n**Affected Cards:**GeForce 5 FX series cards [NV30-NV36]\n96xx # unsupported use Nouveau (no AUR build)\nAffected Cards: GeForce 2/3/4 MX/Ti series cards [NV11, NV17-NV28]\nnvidia-installer only supports the latest driver\nTo see what driver version support your card go here: # Nvidia Driver Search\nPut in the info for your card, and choose Linux-64bit as OS.\nOr see here main Nvidia packages supported card list: https://www.nvidia.com/\nAll supported cards for nvidia-390xx: (not supported by nvidia-installer)\nNvidia 390xx Supported Cards List\nFor GeForce it seems to show all drivers only on this page:\nNvidia-geforce\nYou can also use our tool to check your card: # nvidia-installer-check\nthis will give you something like this if your card is supported by the latest NVidia-driver:\nYour graphics card (id: 128b) is supported by the nvidia-dkms driver. To install a driver for this card, you can use nvidia-installer-dkms.\nIf you have PC with a dedicated card plugged in you can use nvidia-installer-dkms to get latest driver installed, for more info go here:\nnvidia-installer-dkms\nFor other Nvidia settings choose the right article for your hardware:\nhttps://discovery.endeavouros.com/category/nvidia/\n"},{"id":4,"href":"/docs/hardware/gpu/nvidia/nvidia-optimus-notebooks-hybrid-graphics/","title":"Nvidia Optimus Notebooks Hybrid Graphics","section":"Nvidia","content":" Nvidia Optimus Notebooks Hybrid Graphics # Find out if you are on such system run this from terminal:\nlspci -vnn | grep '\\''[030[02]\\]'\nif it gives out something like this with two devices:\n00:02.0 VGA compatible controller [0300]: Intel Corporation Haswell-ULT Integrated Graphics Controller [8086:0a16] (rev 09) (prog-if 00 [VGA controller])\n01:00.0 3D controller [0302]: NVIDIA Corporation GK107M [GeForce GT 750M] [10de:0fe4] (rev ff) (prog-if ff)\nit will be that you have such hybrid system with a combination of nvidia and intel gpu.\nSome basic information on that: https://wiki.archlinux.org/index.php/Hybrid_graphics\nAs of 2021 the proprietary Nvidia Driver supports handling of Optimus hybrid systems per default. It will boot on intel integrated per default, but only if Nvidia Modesetting DRM is enabled.\nTo do so follow the instructions here:\nNvidia Optional Enhancements and Troubleshooting\nYou can use the method to add the option to /etc/default/grub and regenare grub.cfg, or use the second method by integrating it into initramfs kernel image by editing /etc/mkinitcpio.conf and regenerate initramfs images.\nTo be able to switch between the two GPUs usage, you can use one of the options to have this available in different ways:\nSupergfxctl is a useful utility provided by ASUS Linux. It helps with managing GPU switching functionality on hybrid laptops. (While supergfxctl was originally designed with ASUS Optimus laptops in mind, it has since evolved into a standalone tool that functions with any laptops with hybrid graphics.)\nSupergfxctl\nEnvyControl is a CLI tool that provides an easy way to switch between GPU modes on Nvidia Optimus systems:\nEnvy-Control\nOptimus-manager is one solution currently where you can switch between the two GPU’s:\nOptimus-Manager\nOptimus Switch is completely powerdown Nvidia GPU and will save more power, but needs to reboot system to do so:\nOptimus-Switch\nRender Offload is a new mechanism build inside the Nvidia Driver:\nRender-Offload\nBumblebee is the very first Linux implementation to switch and manage Optimus systems GPU’s, but is not working on newer systems:\nBumblebee (older systems)\nSome helpful links to tutorials # https://github.com/linesma/Optimus-indicator\nhttps://forum.endeavouros.com/t/optimus-manager-issues/7403/15\nhttps://github.com/Askannz/optimus-manager\nhttps://wiki.archlinux.org/index.php/PRIME\nhttps://forum.endeavouros.com/t/optimus-switch-another-solution-for-optimus-laptops\nhttps://discovery.endeavouros.com/community-contributions/how-to-enable-nvidia-optimus/2019/11/\n"},{"id":5,"href":"/docs/hardware/gpu/nvidia/nvidia-optional-enchancements-and-troubleshooting/","title":"Nvidia Optional Enchancements and Troubleshooting","section":"Nvidia","content":" Nvidia Optional Enchancements and Troubleshooting # It can happen that you will fail to load the Nvidia driver in some cases, such as the presence of an integrated intel GPU (build-in on Motherboard). The system can get confused and fail to properly load on the Nvidia Driver, in this case, there is a workaround to force loading Nvidia Driver in the early boot (KMS) state and forcing the loading of modules on the kernel boot option. Mainly for use on dedicated GPU-Cards (PCIe Cards on Desktop PC or Notebooks with only Nvidia GPU [non-hybrid] ). It can cause issues for hybrid systems (optimus)!\nFor example: On Cinnamon you will see a message that you run in Software Rendering Mode, or the system simply boots to a black screen.. not starting X … no Login Manager starting If you have this issue there are two ways to load the needed modules early in the boot process to have them fully initialized when reaching X. Adding it to grub kernel line or using kernel-images (Force early load [KMS]):\n1. Adding it to systemd-boot options: # sudo nano /etc/kernel/cmdline\nnvidia-drm.modeset=1 to the one line inside the file (adding it not replacing anything)\nadding modesetting option to systemd-boot installs\nand rebuild kernel images:\nsudo reinstall-kernels\n2. Adding it to grub kernel line: # to change configuration and rebuild grub.cfg and kernel boot images :\nadding nvidia-drm.modeset=1 to the kernel parameter inside grub:\nsudo nano /etc/default/grub and put nvidia-drm.modeset=1 inside (leave the rest untouched!!) as you can see here:\n# GRUB boot loader configuration GRUB_DEFAULT=0 GRUB_TIMEOUT=5 GRUB_DISTRIBUTOR=\u0026quot;EndeavourOS\u0026quot; GRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;nvidia-drm.modeset=1 resume=UUID=... save the file [Ctrl+X] and rebuild the grub.cfg:\nsudo grub-mkconfig -o /boot/grub/grub.cfg 3. Force early load (KMS) # In most cases when you can not reach the DM (loginmanager lightdm/GDM/SDDM) it needs to force to load nvidia drivers on early boot. To do so:\nFor dracut installs (deafult up from cassini release):\ncreate a dropin config:\nsudo nano /etc/dracut.conf.d/nvidia.conf\nand add the following line:\nadd_drivers+=” nvidia nvidia-drm nvidia-modeset nvidia-uvm ”\nrebuild kernel images:\nsudo reinstall-kernels\nfor mkinitcpio usage:\nedit mkinitcpio.conf to get the module inside:\nsudo nano /etc/mkinitcpio.conf and edit like this:\n# vim:set ft=sh # MODULES # The following modules are loaded before any boot hooks are # run. Advanced users may wish to specify all system modules # in this array. For instance: # MODULES=\u0026quot;piix ide_disk reiserfs\u0026quot; MODULES=\u0026quot;nvidia nvidia_modeset nvidia_uvm nvidia_drm\u0026quot; # BINARIES .... save the file as above…\nrebuild kernel image:\nsudo mkinitcpio -P reboot again and you should have early boot enabled…\n4. Enhancement avoid screen tearing # Have nvidia-settings installed and run it on login with tagging option FullCompositingPipeline to get better video quality, this works for a single display setup. If you have more, you need to add them to the command or option line, for this take a look at the arch-wiki page linked here.\nnvidia-settings --assign CurrentMetaMode=\u0026quot;nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }\u0026quot; https://wiki.archlinux.org/index.php/NVIDIA/Troubleshooting#Avoid_screen_tearing\nYou can add this to /etc/X11/xorg.conf.d/20-nvidia.conf like this:\nSection \u0026quot;Device\u0026quot; Identifier \u0026quot;Nvidia Card\u0026quot; Driver \u0026quot;nvidia\u0026quot; VendorName \u0026quot;NVIDIA Corporation\u0026quot; EndSection Section \u0026quot;Screen\u0026quot; Identifier \u0026quot;nvidia\u0026quot; Option \u0026quot;metamodes\u0026quot; \u0026quot;nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }\u0026quot; Option \u0026quot;TripleBuffer\u0026quot; \u0026quot;on\u0026quot; Option \u0026quot;AllowIndirectGLXProtocol\u0026quot; \u0026quot;off\u0026quot; EndSection In some cases like using Plasma and SDDM it can be that you need to set DPI settings on multi-display setups.\nThe easiest way around this is to set DPI in .Xresources to do so:\nsudo nano ~/.Xrescources and add DPI settings.\nXft.dpi: 96\nOn KDE, this can be achieved by adding the following section to /etc/sddm.conf (create the file if it does not exist) :\n[X11] ServerArguments=-nolisten tcp -dpi 96 Replace 96 by your desired DPI value.\nThere is also a PKGBUILD at AUR to build a simple auto starter for full-compositing-pipeline:\nhttps://github.com/Askannz/nvidia-force-comp-pipeline\nyou can build and install:\nyay -S nvidia-force-comp-pipeline nvidia-settings\nIt will check display setup and enable it automatically using nvidia-settings on login to the session.\n5. Xorg issue with framebuffer? # System fails to load the server and give error like so:\n(EE) cannot run in framebuffer mode. Please specify busIDs for all framebuffer device.\nCheck if you have unneeded drivers for Xorg installed and uninstall it:\npacman -R xf86-video-fbdev\nIt is also reported that xf86-video-vesa is not good to be installed in combination with Nvidia drivers.\n"},{"id":6,"href":"/docs/hardware/printers/","title":"Printers","section":"Hardware","content":" Printers # To get your printer working you will mainly need to install and setup cups.\nIf you choose the printer support option on the installer you will already have a working cups setup and only need to add your printer.\nTo start with cups and an usb connected printer:\nsudo pacman -Syu cups cups-filters cups-pdf system-config-printer --needed To get full cups with support for many different printers per default. Install this packages on top of that:\nsudo pacman -Syu ghostscript gsfonts foomatic-db-engine foomatic-db foomatic-db-ppds foomatic-db-nonfree foomatic-db-nonfree-ppds gutenprint foomatic-db-gutenprint-ppds --needed For QT environments (like KDE/plasma LXQT):\nsudo pacman -Syu print-manager --needed enable socket, which will listen if print-job is calling and then enable the service:\nsudo systemctl enable --now cups.socket or using the service, which will be running constantly.\nsudo systemctl enable --now cups.service For network printer support, check if avahi is installed and its daemon is running:\nsystemctl status avahi-daemon if you get an error or it shows disabled not running:\nsudo pacman -Syu avahi --needed sudo systemctl start avahi-daemon sudo systemctl enable avahi-daemon Automatically add network printers: # CUPS can use Avahi browsing to discover unknown shared printers in your network. This can be useful in large setups where the server is unknown. To use this feature, set up local hostname resolution, and start both avahi-daemon.service and cups-browsed.service. Jobs are sent directly to the printer without any processing so the created queues may not work, however driverless printers such as those supporting IPP Everywhere or AirPrint should work out of the box.\nThis is mainly usefull for mobile devices or for usage in offices where a number of changing network printers is used.\nBut you can use this at home too, it can be less troublesome in case, as you do not need to setup drivers and uri.\nsudo systemctl enable --now cups-browsed.service\nAnd make sure mdns (local host name resolution) is enabled and added to access firewalld. see here: https://discovery.endeavouros.com/wp-admin/post.php?post=1029\u0026amp;action=edit#network-printer\nWith this you will get network printers automatically added, without any need to setup.\nTroubleshooting: # Network printer not reachable # It is a common issue that you can not get wifi printers to print, especially some Brother wifi printers.\nIt can be required to enable local hostname resolution for avahi to be able to connect to your network printer:\nhttps://wiki.archlinux.org/title/Avahi#Hostname_resolution\nAvahi provides local hostname resolution using a “hostname.local” naming scheme. To enable it, make sure the nss-mdns package is installed and avahi-daemon.service is running:\npacman -Qs nss-mdns to see if it is installed local:\n➜ ~ » pacman -Qs nss-mdns local/nss-mdns 0.14.1-3 glibc plugin providing host name resolution via mDNS\nMake sure avahi-daemon is running:\nsystemctl status avahi-daemon.service\nThen, edit the file /etc/nsswitch.conf and change the hosts line to include mdns_minimal [NOTFOUND=return] before resolve and dns:\nRestart avahi-daemon and NetworkManager after this, or reboot machine:\nsudo systemctl restart avahi-daemon NetworkManager Firewall is blocking mdns: # To make use of local hostname resolution (mdns) you need to change firewalld from public to home (zone change).\nAssigning a Zone to a device will also be remembered on network changes, so if you leave home network and per example connect to a Wi-Fi network outside it will always use the default set public zone as long as you do not change that manually.\nTo make these permanent you need to set Configuration to Permanent and run the change to home zone, if Runtime is used it will get reset after logout. Now you should see network printers in printer setup tools showing up.\nProcedure to find the right driver for your printer: # Go to the open printing website and search for whether your printer is supported on Linux at all, and what driver options are available.\nThis is what the result will look like:\nOn top you will see whether or not there is a working driver for your printer second it will show available driver options, in the example, you see Type: Ghostscript built-in, so go to package search on Archlinux (or use the tool of your choice) you will find GhostScript (already installed if you followed the tutorial from top to bottom) So install the driver available for your device, and proceed to install and configure the printer. But take a look at these links first, as it could be that your printer needs some extra configuration done to work properly:\nSome links to common printers’ information on Archwiki: # Canon printers Epson printers HP printers Lexmark printers Oki printers Samsung printers Brother printers Notes on Common ways to install printer drivers: # Mostly all printers will be using cups as a backend to communicate with your system, but different brands will be needing different ways to get printers fully functional:\nHewlett and Packard (HP) printers: # Some of the HP-printers needs a proprietary plugin to work, this can be installed by hplip.\nHere is an overview of some common printers and working drivers on Archwiki:\nPrinter-specific_problems#HP\nMost drivers for hp-printers come with the HPLIP package you can install this with:\nsudo pacman -S hplip\ninstall python-pyqt5 to run GUI and hp-toolbox:\nsudo pacman -S python-pyqt5\nnow run the program to install new printer queue and the possibly needed proprietary plugin for some hp-printers:\nsudo hp-setup -i for CLI install without a GUI\nor run hp-setup from menu.\nhp-setup from terminal CLI\nThe tool guides you through the installation – simply read the instructions.\nCurrent notes (29.5.2020):\nThere is currently an issue with getting keys from keyservers, this also seem to effect the hp-plugin. Verify downloaded plugin to see what caused a failed to install. To solve this you need to change the server used by the tool:\nsudo nano /usr/share/hplip/base/validation.py\nchange the server to keyserver.ubuntu.com like this:\ndef **init**(self, pgp_site = 'keyserver.ubuntu.com', key = 0x4ABA2F66DBD5A95894910E0673D770CDA59047B9):\nSave the file by pressing [Ctrl+X].\nThen run sudo hp-setup -i again.\nYou have your printer added now, so you do not need to set it up again as what follows, but you can use system-config-printer to setup configuration for papersize e.t.c.\nHP printers alternative driver (foo2zjs-nightly) # Uninstall hplip package: sudo pacman -Rsc hplip\ninstall foo2zjs-nightly from AUR:\nyay -S foo2zjs-nightly\nUse system-config-printer to set up your HP Printer.\nCommon printer setup (not if hplip is used): # Use the system-config-printer tool to find and set up your printer:\nUnder KDE/plasma or LXQT:\nBrother Network Printers # Most newer Brother Network Printers can be set up driverless after you enable local hostname resolution (like described up here before).\nPower on your Printer and start searching for it with system-config-printer GUI:\nMake sure to select the entry without the URL in it, and that it shows up as Driver-Less IPP on the right side\nAd a Local Name if you want\nit should now give you the Option to print a test page\nAfter adding the Printer make sure paper size and options are all correct.\n"},{"id":7,"href":"/docs/hardware/webcams/","title":"Webcams","section":"Hardware","content":" Webcams # Setting up a webcam on Linux is easy.\nIn most cases, the device should be detected without any extra steps needed.\nCheck it:\nv4l2-ctl --list-devices\nneeds v4l-utils installed\nPer default you have at minimum two apps installed you can use to check how the webcam is working basically: v4l2-view ( a simple viewer) and v4l2-test-bench a qt-based config tool:\nv4l2 test bench and viewer\nIn most cases setting done here will get used if you use the cam in other applications like Jitsi or even zoom skype or other crap you have to use 😉\nB.T.W if you need to use zoom Jitsi or skype… Before you go through all the hassle of installing it, try using the web app, it’s usually easier and takes less effort.\nhttps://meet.jit.si/\nhttps://www.skype.com/en/features/skype-web/\nhttps://web.whatsapp.com/\nOnly to show some examples…\nThere are a bunch of webcam clients/apps you can use on Linux on my testing a lot of them do not work properly, but I find GUVCView working smooth and without issues right out of the box.\nAnd the app has both GTK and QT versions to choose from for installation:\ncommunity/guvcview Simple GTK+ interface for capturing and viewing video from v4l2 devices\ncommunity/guvcview-qt Simple Qt interface for capturing and viewing video from v4l2 devices\nGUVCView gtk version\nIf you got any trouble or need some special setup the arch wiki will be the first read for you:\nhttps://wiki.archlinux.org/title/Webcam_setup\nOr if you want to follow deep into the rabbit hole:\nhttps://www.linuxtv.org // https://www.kernel.org/ // V4L2_camera_overview\n"}]